@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix ex: <http://example.com/base/> .
@prefix sosa: <http://www.w3.org/ns/sosa/.> .
@prefix ssn: <http://www.w3.org/ns/ssn/.> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

<#TRY_Dataset>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/TRY_DATABASE" ;
        rr:class sosa:ObservationCollection ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasMember ;
        rr:objectMap [
            rr:template "http://example.com/base/TRY_{observationid}" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:template "http://example.com/base/TRY_2070-03-08" ;
        ] ;
    ] ;

    .


<#observationTRY>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/TRY_{observationid}" ;
        rr:class sosa:ObservationCollection ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:column "observationid" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasFeatureOfInterest ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_{accspeciesname}" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:usedProcedure ;
        rr:objectMap [
            rr:template "http://example.com/base/example_procedure" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:madeBySensor ;
        rr:objectMap [
            rr:template "http://example.com/base/example_sensor" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasMember ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_flowering_start__month_" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_plant_epiphytism" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_plant_woodiness" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_leaf_phenology_type" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_leaf_shape" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_seed_dry_mass" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_growthform" ;
        ] ;
    ] ;

    .


<#featureOfInterestTRY>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_{accspeciesname}" ;
        rr:class sosa:FeatureOfInterest ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate geo:lat ;
        rr:objectMap [
            rr:column "latitude_wgs84" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate geo:long ;
        rr:objectMap [
            rr:column "longitude_wgs84" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate geo:alt ;
        rr:objectMap [
            rr:column "elevation" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:elevationAccuracy ;
        rr:objectMap [
            rr:column "elevationaccuracy" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:elevationAccuracy ;
        rr:objectMap [
            rr:column "elevationaccuracy" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:TDWG4 ;
        rr:objectMap [
            rr:column "tdwg4" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:instanceOf ;
        rr:objectMap [
            rr:column "accspeciesname" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/try_flowering_start__month_" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/try_plant_epiphytism" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/try_plant_woodiness" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/try_leaf_phenology_type" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/try_leaf_shape" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/try_seed_dry_mass" ;
        ] ;
        rr:objectMap [
            rr:template "http://example.com/base/growthform" ;
        ] ;
    ] ;

    .


<#try_flowering_start__month_>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/try_flowering_start__month_" ;
        rr:class ssn:Property ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_flowering_start__month_" ;
        ] ;
    ] ;

    .


<#try_plant_epiphytism>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/try_plant_epiphytism" ;
        rr:class ssn:Property ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_plant_epiphytism" ;
        ] ;
    ] ;

    .


<#try_plant_woodiness>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/try_plant_woodiness" ;
        rr:class ssn:Property ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_plant_woodiness" ;
        ] ;
    ] ;

    .


<#try_leaf_phenology_type>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/try_leaf_phenology_type" ;
        rr:class ssn:Property ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_leaf_phenology_type" ;
        ] ;
    ] ;

    .


<#try_leaf_shape>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/try_leaf_shape" ;
        rr:class ssn:Property ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_leaf_shape" ;
        ] ;
    ] ;

    .


<#try_seed_dry_mass>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/try_seed_dry_mass" ;
        rr:class ssn:Property ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_try_seed_dry_mass" ;
        ] ;
    ] ;

    .


<#growthform>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/growthform" ;
        rr:class ssn:Property ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/{observationid}_growthform" ;
        ] ;
    ] ;

    .


<#{observationid}_try_flowering_start__month_>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_try_flowering_start__month_" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:column "try_flowering_start__month_" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#{observationid}_try_plant_epiphytism>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_try_plant_epiphytism" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:column "try_plant_epiphytism" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#{observationid}_try_plant_woodiness>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_try_plant_woodiness" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:column "try_plant_woodiness" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#{observationid}_try_leaf_phenology_type>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_try_leaf_phenology_type" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:column "try_leaf_phenology_type" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#{observationid}_try_leaf_shape>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_try_leaf_shape" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:column "try_leaf_shape" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#{observationid}_try_seed_dry_mass>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_try_seed_dry_mass" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:column "try_seed_dry_mass" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#{observationid}_growthform>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{observationid}_growthform" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:column "growthform" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#example_procedure>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/example_procedure" ;
        rr:class sosa:Procedure ;
    ] ;

    .


<#example_sensor>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/example_sensor" ;
        rr:class sosa:Sensor ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:isHostedBy ;
        rr:objectMap [
            rr:template "http://example.com/base/example_platform"
        ] ;
    ] ;

    .


<#example_platform>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "try"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/example_platform" ;
        rr:class sosa:Platform ;
    ] ;

    .


<#speciesTAXA>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "planthub_taxa_2024_03_11_full"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{accspeciesname}" ;
        rr:class ex:Species ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasIdentifier ;
        rr:objectMap [
            rr:column "lcvpid" ;
        ] ;
        rr:objectMap [
            rr:column "ipniid" ;
        ] ;
        rr:objectMap [
            rr:column "wfolink" ;
        ] ;
        rr:objectMap [
            rr:column "wikidata_q_ids" ;
        ] ;
        rr:objectMap [
            rr:column "gbifid" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:column "englishname" ;
            rr:language "en" ;
        ] ;
        rr:objectMap [
            rr:column "germanname" ;
            rr:language "de" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasAuthor ;
        rr:objectMap [
            rr:column "accauthorname" ;
        ] ;
    ] ;

    .


<#LCVPID>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "planthub_taxa_2024_03_11_full"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{lcvpid}" ;
        rr:class ex:LCVPID ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate skos:closeMatch ;
        rr:objectMap [
            rr:column "ipniid" ;
        ] ;
        rr:objectMap [
            rr:column "wfolink" ;
        ] ;
        rr:objectMap [
            rr:column "wikidata_q_ids" ;
        ] ;
        rr:objectMap [
            rr:column "gbifid" ;
        ] ;
    ] ;

    .


<#IPNIID>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "planthub_taxa_2024_03_11_full"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{ipniid}" ;
        rr:class ex:IPNIID ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate skos:closeMatch ;
        rr:objectMap [
            rr:column "lcvpid" ;
        ] ;
        rr:objectMap [
            rr:column "wfolink" ;
        ] ;
        rr:objectMap [
            rr:column "wikidata_q_ids" ;
        ] ;
        rr:objectMap [
            rr:column "gbifid" ;
        ] ;
    ] ;

    .


<#WFOLINK>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "planthub_taxa_2024_03_11_full"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{wfolink}" ;
        rr:class ex:WFOID ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate skos:closeMatch ;
        rr:objectMap [
            rr:column "lcvpid" ;
        ] ;
        rr:objectMap [
            rr:column "ipniid" ;
        ] ;
        rr:objectMap [
            rr:column "wikidata_q_ids" ;
        ] ;
        rr:objectMap [
            rr:column "gbifid" ;
        ] ;
    ] ;

    .


<#WIKIDATAID>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "planthub_taxa_2024_03_11_full"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{wikidata_q_ids}" ;
        rr:class ex:WikidataID ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate skos:closeMatch ;
        rr:objectMap [
            rr:column "lcvpid" ;
        ] ;
        rr:objectMap [
            rr:column "ipniid" ;
        ] ;
        rr:objectMap [
            rr:column "wfolink" ;
        ] ;
        rr:objectMap [
            rr:column "gbifid" ;
        ] ;
    ] ;

    .


<#GBIFID>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "planthub_taxa_2024_03_11_full"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{gbifid}" ;
        rr:class ex:GBIFID ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate skos:closeMatch ;
        rr:objectMap [
            rr:column "lcvpid" ;
        ] ;
        rr:objectMap [
            rr:column "ipniid" ;
        ] ;
        rr:objectMap [
            rr:column "wfolink" ;
        ] ;
        rr:objectMap [
            rr:column "wikidata_q_ids" ;
        ] ;
    ] ;

    .    


<#Author>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "planthub_taxa_2024_03_11_full"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{accauthorname}" ;
        rr:class ex:Author ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:column "accauthorname" ;
            rr:datatype xsd:string ;
        ] ;
    ] ;

    .


<#taxonKey>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{taxonkey}" ;
        rr:class ex:GBIFID ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasGenus ;
        rr:objectMap [
            rr:column "genus" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:column "species" ;
        ] ;
        rr:objectMap [
            rr:column "scientificname" ;
        ] ;
        rr:objectMap [
            rr:column "verbatimscientificname" ;
        ] ;
        rr:objectMap [
            rr:column "verbatimscientificnameauthorship" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasFamily ;
        rr:objectMap [
            rr:column "family" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasOrder ;
        rr:objectMap [
            rr:column "ordertax" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasClass ;
        rr:objectMap [
            rr:column "class" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasPhylum ;
        rr:objectMap [
            rr:column "phylum" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasKingdom ;
        rr:objectMap [
            rr:column "kingdom" ;
        ] ;
    ] ;

    .

<#kingdom>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{kingdom}" ;
        rr:class ex:Kingdom ;
    ] ;

    .

<#phylum>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{phylum}" ;
        rr:class ex:Phylum ;
    ] ;

    .

<#class>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{class}" ;
        rr:class ex:Class ;
    ] ;

    .

<#order>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{ordertax}" ;
        rr:class ex:Order ;
    ] ;

    .

<#family>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{family}" ;
        rr:class ex:Family ;
    ] ;

    .

<#genus>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{genus}" ;
        rr:class ex:Genus ;
    ] ;

    .

<#observationNaturgucker>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{gbifid}" ;
        rr:class sosa:Observation ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasFeatureOfInterest ;
        rr:objectMap [
            rr:template "http://example.com/base/{gbifid}_{species}" ;
        ] ;
    ] ; 

    rr:predicateObjectMap [
        rr:predicate sosa:usedProcedure ;
        rr:objectMap [
            rr:column "basisofrecord" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:madeBySensor ;
        rr:objectMap [
            rr:column "recordedby" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:observedProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/Occurence" ;
        ] ;
    ] ; 

    rr:predicateObjectMap [
        rr:predicate sosa:hasResult ;
        rr:objectMap [
            rr:template "http://example.com/base/positive" ;
        ] ;
    ] ; 

    rr:predicateObjectMap [
        rr:predicate sosa:resultTime ;
        rr:objectMap [
            rr:column "eventdate" ;
        ] ;
    ] ;

    .

<#sensor>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{recordedby}" ;
        rr:class sosa:Sensor ;
    ] ;

    .

<#occurence>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/Occurence" ;
        rr:class sosa:ObservableProperty ;
    ] ;

    .

<#positive>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/positive" ;
        rr:class sosa:Result ;
    ] ;

    .

<#speciesGBIF>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{species}" ;
        rr:class ex:Species ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:hasIdentifier ;
        rr:objectMap [
            rr:column "taxonkey" ;
        ] ;
    ] ;

    .

<#naturguckerDataset>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/naturgucker_dataset" ;
        rr:class sosa:ObservationCollection ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasMember ;
        rr:objectMap [
            rr:column "gbifid" ;
        ] ;
    ] ;

    .

<#featureOfInterestNaturgucker>
    a rr:TriplesMap ;

    rr:logicalTable [ rr:tableName "naturguckersql_0to100k"] ;

    rr:subjectMap [
        rr:template "http://example.com/base/{gbifid}_{species}" ;
        rr:class sosa:FeatureOfInterest ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:instanceOf ;
        rr:objectMap [
            rr:column "species" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate sosa:hasProperty ;
        rr:objectMap [
            rr:template "http://example.com/base/Occurence" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate geo:lat ;
        rr:objectMap [
            rr:column "decimallatitude" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate geo:long ;
        rr:objectMap [
            rr:column "decimallongitude" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate geo:alt ;
        rr:objectMap [
            rr:column "elevation" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:coordinateUncertainty ;
        rr:objectMap [
            rr:column "coordinateuncertaintyinmeters" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:elevationAccuracy ;
        rr:objectMap [
            rr:column "elevationaccuracy" ;
        ] ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate ex:tryLocality ;
        rr:objectMap [
            rr:column "locality" ;
        ] ;
    ] ;

    .